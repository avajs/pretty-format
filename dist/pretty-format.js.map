{"version":3,"sources":["pretty-format.js"],"names":[],"mappings":"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","file":"pretty-format.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n  typeof define === 'function' && define.amd ? define(['lodash'], factory) :\n  global.PrettyFormat = factory(global._)\n}(this, function (_) { 'use strict';\n\n  const STATE = {};\n\n  const NEWLINE_REGEXP = /\\n/ig;\n\n  const SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\n\n  function indentLines(str) {\n    return '  ' + str.replace(NEWLINE_REGEXP, '\\n  ');\n  }\n\n  function getSymbols(obj) {\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      return Object.getOwnPropertySymbols(obj);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * @public\n   * @class Type\n   */\n  function Type(options) {\n    this.test = options.test;\n    this.print = options.print;\n  }\n\n  function reset() {\n    STATE.visitedRefs = [];\n    STATE.prevVisitedRefs = null;\n    STATE.depth = 0;\n  }\n\n  reset();\n\n  function prettyFormat(val) {\n    if (STATE.depth === 0) {\n      reset();\n    }\n\n    STATE.prevVisitedRefs = STATE.visitedRefs;\n    STATE.visitedRefs = [].concat(STATE.visitedRefs);\n    STATE.depth++;\n\n    var result, error;\n    try {\n      result = _.find(Type.all, type => type.test(val)).print(val);\n    } catch(e) {\n      error = e;\n    }\n\n    STATE.depth--;\n    STATE.visitedRefs = STATE.prevVisitedRefs;\n\n    if (STATE.depth === 0) {\n      reset();\n    }\n\n    if (error) {\n      throw error;\n    } else {\n      return result;\n    }\n  }\n\n  prettyFormat.Type = Type;\n  prettyFormat.reset = reset;\n\n  /**\n   * @public\n   * @class Arguments\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Arguments = new Type({\n    test: _.isArguments,\n\n    print(val) {\n      return 'Arguments ' + Type.Array.print(val);\n    }\n  });\n\n  /**\n   * @public\n   * @class Array\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Array = new Type({\n    test: _.isArray,\n\n    print(val) {\n      var result = '[';\n\n      if (val.length) {\n        result += '\\n';\n\n        for (var i = 0; i < val.length; i++) {\n          result += indentLines(prettyFormat(val[i]));\n\n          if (i < val.length - 1) {\n            result += ',\\n';\n          }\n        }\n\n        result += '\\n';\n      }\n\n      return result + ']';\n    }\n  });\n\n  /**\n   * @public\n   * @class Boolean\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Boolean = new Type({\n    test: _.isBoolean,\n\n    print(val) {\n      return Boolean.prototype.toString.call(val);\n    }\n  });\n\n  /**\n   * @public\n   * @class Circular\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Circular = new Type({\n    test(val) {\n      if (_.isObject(val)) {\n        if (_.indexOf(STATE.visitedRefs, val) !== -1) {\n          return true;\n        }\n        STATE.visitedRefs.push(val);\n      }\n      return false;\n    },\n\n    print() {\n      return '[Circular]';\n    }\n  });\n\n  /**\n   * @public\n   * @class Date\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Date = new Type({\n    test: _.isDate,\n\n    print(val) {\n      return Date.prototype.toISOString.call(val);\n    }\n  });\n\n  /**\n   * @public\n   * @class Error\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Error = new Type({\n    test: _.isError,\n\n    print(val) {\n      return '[' + Error.prototype.toString.call(val) + ']';\n    }\n  });\n\n  /**\n   * @public\n   * @class Function\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Function = new Type({\n    test: _.isFunction,\n\n    print(val) {\n      return Function.prototype.toString.call(val);\n    }\n  });\n\n  /**\n   * @public\n   * @class Infinity\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Infinity = new Type({\n    test(val) {\n      return val === Infinity || val === -Infinity;\n    },\n\n    print(val) {\n      return Infinity.toString.call(val);\n    }\n  });\n\n\n  /**\n   * @public\n   * @class Map\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Map = new Type({\n    test(val) {\n      return Object.prototype.toString.call(val) === '[object Map]';\n    },\n\n    print(val) {\n      var result = 'Map {';\n      var iterator = val.entries();\n      var current = iterator.next();\n\n      if (!current.done) {\n        result += '\\n';\n\n        while (!current.done) {\n          var key = prettyFormat(current.value[0]);\n          var value = prettyFormat(current.value[1]);\n\n          result += indentLines(key + ' => ' + value);\n\n          current = iterator.next();\n\n          if (!current.done) {\n            result += ',\\n';\n          }\n        }\n\n        result += '\\n';\n      }\n\n      return result + '}';\n    }\n  });\n\n  /**\n   * @public\n   * @class NaN\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.NaN = new Type({\n    test: _.isNaN,\n\n    print() {\n      return 'NaN';\n    }\n  });\n\n  /**\n   * @public\n   * @class Null\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Null = new Type({\n    test: _.isNull,\n\n    print() {\n      return 'null';\n    }\n  });\n\n  /**\n   * @public\n   * @class Number\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Number = new Type({\n    test: _.isFinite,\n\n    print(val) {\n      return val === 0 && (1 / val) < 0 ? '-0' : '' + val;\n    }\n  });\n\n  /**\n   * @public\n   * @class Object\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Object = new Type({\n    test: _.isObject,\n\n    print(val) {\n      var result = val.constructor.name + ' {',\n          keys = _.keys(val),\n          symbols = getSymbols(val);\n\n      if (symbols.length) {\n        keys = _.reject(keys, _.bindKey(SYMBOL_REGEXP, 'test')).concat(symbols);\n      }\n\n      if (keys.length) {\n        result += '\\n';\n\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          var name = prettyFormat(key);\n          var value = prettyFormat(val[key]);\n\n          result += indentLines(name + ': ' + value);\n\n          if (i < keys.length - 1) {\n            result += ',\\n';\n          }\n        }\n\n        result += '\\n';\n      }\n\n      return result + '}';\n    }\n  });\n\n  /**\n   * @public\n   * @class RegExp\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.RegExp = new Type({\n    test: _.isRegExp,\n\n    print(val) {\n      return RegExp.prototype.toString.call(val);\n    }\n  });\n\n  /**\n   * @public\n   * @class Set\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Set = new Type({\n    test(val) {\n      return Object.prototype.toString.call(val) === '[object Set]';\n    },\n\n    print(val) {\n      var result = 'Set {';\n      var iterator = val.entries();\n      var current = iterator.next();\n\n      if (!current.done) {\n        result += '\\n';\n\n        while (!current.done) {\n          var value = prettyFormat(current.value[1]);\n\n          result += indentLines(value);\n\n          current = iterator.next();\n\n          if (!current.done) {\n            result += ',\\n';\n          }\n        }\n\n        result += '\\n';\n      }\n\n      return result + '}';\n    }\n  });\n\n  /**\n   * @public\n   * @class String\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.String = new Type({\n    test: _.isString,\n\n    print(val) {\n      return '\"' + val + '\"';\n    }\n  });\n\n  /**\n   * @public\n   * @class Symbol\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Symbol = new Type({\n    test(val) {\n      return val && val.toString && SYMBOL_REGEXP.test(val.toString());\n    },\n\n    print(val) {\n      return Symbol.prototype.toString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n    }\n  });\n\n  /**\n   * @public\n   * @class Undefined\n   * @extends Type\n   * @memberOf Type\n   */\n  Type.Undefined = new Type({\n    test: _.isUndefined,\n\n    print() {\n      return 'undefined';\n    }\n  });\n\n  Type.all = [\n    Type.Circular,\n\n    Type.Arguments,\n    Type.Array,\n    Type.Boolean,\n    Type.Error,\n    Type.Function,\n    Type.Infinity,\n    Type.Map,\n    Type.NaN,\n    Type.Null,\n    Type.Number,\n    Type.RegExp,\n    Type.Set,\n    Type.String,\n    Type.Symbol,\n    Type.Undefined,\n    Type.Date,\n\n    Type.Object\n  ];\n\n  return prettyFormat;\n\n}));\n"],"sourceRoot":"/source/"}